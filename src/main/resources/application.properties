spring.application.name=gongkademy

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.properties.hibernate.show_sql=${SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=debug
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=${DDL_AUTO}

spring.sql.init.mode=${SQL_INIT_MODE}
spring.jpa.defer-datasource-initialization=${DATA_SOURCE_INITIALIZATION}
spring.sql.init.data-locations=classpath:sql/data.sql
spring.sql.init.schema-locations=classpath:sql/schema.sql

# allow origin
front.url=${FRONT_URL}

# file
file.dir.course-thumbnail = ${FILE_DIR_COURSE_THUMBNAIL}
file.dir.course-note = ${FILE_DIR_COURSE_NOTE}

#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# session
server.servlet.session.timeout=${SESSION_TIME_OUT}
server.servlet.session.cookie.same-site=${SAME_SITE}
server.servlet.session.cookie.secure=true

